import { useEffect, useState } from "react";
import "./popup.css";
import { apiLogin } from "./api";
import { getSettings, saveSettings } from "./storage";

export default function Popup() {
  const [model, setModel] = useState("gpt-4o-mini");
  const [provider, setProvider] = useState<"openai" | "anthropic" | "gemini">(
    "openai"
  );
  const [tone, setTone] = useState("concise");
  const [email, setEmail] = useState("");
  const [password, setPassword] = useState("");
  const [token, setToken] = useState<string | undefined>(undefined);
  const [includeSelectionDefault, setIncludeSelectionDefault] = useState(false);
  const [loading, setLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);

  useEffect(() => {
    getSettings().then((s) => {
      setToken(s.authToken);
      if (s.defaultProvider) setProvider(s.defaultProvider);
      if (s.defaultModel) setModel(s.defaultModel);
      if (s.defaultTone) setTone(s.defaultTone);
      setIncludeSelectionDefault(!!s.includeSelectionDefault);
    });
  }, []);

  async function handleLogin() {
    setError(null);
    setLoading(true);
    try {
      const t = await apiLogin(email, password);
      await saveSettings({ authToken: t });
      setToken(t);
    } catch (e: any) {
      setError(e?.message ?? "Login failed");
    } finally {
      setLoading(false);
    }
  }

  async function handleSaveDefaults() {
    setError(null);
    setLoading(true);
    try {
      await saveSettings({
        defaultProvider: provider,
        defaultModel: model,
        defaultTone: tone,
        includeSelectionDefault,
      });
    } catch (e: any) {
      setError(e?.message ?? "Save failed");
    } finally {
      setLoading(false);
    }
  }

  return (
    <div className="popup">
      <h1>Genz</h1>

      {!token ? (
        <div className="card">
          <h2>Login</h2>
          <input
            placeholder="Email"
            value={email}
            onChange={(e) => setEmail(e.target.value)}
          />
          <input
            placeholder="Password"
            type="password"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
          />
          <button disabled={loading} onClick={handleLogin}>
            Login
          </button>
        </div>
      ) : (
        <div className="card">
          <h2>Defaults</h2>
          <label>
            Provider
            <select
              value={provider}
              onChange={(e) => setProvider(e.target.value as any)}
            >
              <option value="openai">OpenAI</option>
              <option value="anthropic" disabled>
                Anthropic (soon)
              </option>
              <option value="gemini" disabled>
                Gemini (soon)
              </option>
            </select>
          </label>
          <label>
            Model
            <input value={model} onChange={(e) => setModel(e.target.value)} />
          </label>
          <label>
            Tone
            <select value={tone} onChange={(e) => setTone(e.target.value)}>
              <option value="concise">Concise</option>
              <option value="professional">Professional</option>
              <option value="friendly">Friendly</option>
              <option value="assertive">Assertive</option>
            </select>
          </label>
          <label style={{ display: "flex", alignItems: "center", gap: 8 }}>
            <input
              type="checkbox"
              checked={includeSelectionDefault}
              onChange={(e) => setIncludeSelectionDefault(e.target.checked)}
            />
            Include selection by default
          </label>
          <button disabled={loading} onClick={handleSaveDefaults}>
            Save
          </button>
          <p style={{ fontSize: 11, color: "#666" }}>
            Select text on the page, click any input, then press the "Compose
            with AI" button to insert.
          </p>
        </div>
      )}

      {error && <div className="error">{error}</div>}
      <footer>Generated by Genz</footer>
    </div>
  );
}

// Mount
import { createRoot } from "react-dom/client";
const root = createRoot(document.getElementById("root")!);
root.render(<Popup />);
